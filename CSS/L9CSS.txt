		 Background Image in CSS
To apply a background image, follow these steps:

 1️⃣ Set Height & Width
- Before applying a background image, set the element’s height and width to ensure visibility.
- ✅ Example:  
  css
  div {
    width: 300px;
    height: 200px;
  }
  

 2️⃣ Apply Background Image
- ✅ Example:
  css
  div {
    background-image: url("image.jpg");
  }
  
  - This will repeat the image by default.

 3️⃣ Prevent Repeating
- ✅ Example:
  css
  div {
    background-image: url("image.jpg");
    background-repeat: no-repeat;
  }
  
  - Other Values:  
    - repeat (default) → Repeats both horizontally & vertically.  
    - repeat-x → Repeats only horizontally.  
    - repeat-y → Repeats only vertically.  
    - no-repeat → Displays only one instance of the image.  

 4️⃣ Background Size
- Three types of background-size:  
  - auto → Keeps the original size of the image.  
  - contain → Adjusts the image to fit inside the element without cropping.  
  - cover → Stretches the image to cover the entire element.  

- ✅ Example:
  css
  div {
    background-image: url("image.jpg");
    background-size: cover;
  }
  

---

 Four Ways to Apply Colors in CSS
 1️⃣ Normal (Color Name)
- ✅ Example:
  css
  p {
    color: red;
  }
  

 2️⃣ HEX Code
- HEX code consists of three pairs: RRGGBB
- Values range from 00 (lowest) to FF (highest).
- ✅ Example:
  css
  p {
    color: ff5733; / Orange /
  }
  
- Adding Opacity (RGBA in HEX)
  - HEX code can also include transparency (opacity):
  - ✅ Example:
    css
    p {
      color: ff573380; / Orange with 50% transparency /
    }
    
    - The last two digits (80) control opacity.

 3️⃣ RGB (Red, Green, Blue)
- RGB values range from 0 to 255.
- ✅ Example:
  css
  p {
    color: rgb(255, 87, 51); / Orange /
  }
  
- Adding Opacity (RGBA)
  - The fourth value (0-1) controls transparency.
  - ✅ Example:
    css
    p {
      color: rgba(255, 87, 51, 0.5); / 50% transparent /
    }
    

 4️⃣ HSL (Hue, Saturation, Lightness)
- hsl(hue, saturation, lightness)
  - Hue (h): 0°–360° (color wheel)  
  - Saturation (s): 0% (gray) – 100% (full color)  
  - Lightness (l): 0% (black) – 100% (white)  
- ✅ Example:
  css
  p {
    color: hsl(20, 100%, 50%); / Orange /
  }
  
- Adding Opacity (HSLA)
  - ✅ Example:
    css
    p {
      color: hsla(20, 100%, 50%, 0.5); / 50% transparent /
    }
    

---

 Gradients in CSS
A gradient is a smooth transition between two or more colors.

 1️⃣ Linear Gradient
- A linear gradient moves in a straight direction.
- ✅ Example:
  css
  div {
    background: linear-gradient(to right, red, blue);
  }
  
- Direction Options:
  - to right → Left to Right  
  - to bottom → Top to Bottom  
  - to left → Right to Left  
  - to top → Bottom to Top  
  - 45deg → Diagonal  

 2️⃣ Radial Gradient
- A radial gradient spreads from the center outward.
- ✅ Example:
  css
  div {
    background: radial-gradient(circle, red, blue);
  }
  
- Shape Options:
  - circle → Perfect circle  
  - ellipse → Stretched oval  

 3️⃣ Conic Gradient
- A conic gradient is a color transition around a center point.
- ✅ Example:
  css
  div {
    background: conic-gradient(red, blue, green);
  }
  

---

 Background Attachment
Controls whether the background image scrolls with the page.

 Values of background-attachment
1️⃣ scroll (default) → Moves with the page  
2️⃣ fixed → Stays in place when scrolling  
3️⃣ local → Moves with the element’s content  

✅ Example:
css
div {
  background-image: url("image.jpg");
  background-attachment: fixed;
}


---

✨ Note: For complex gradients, use a Gradient Generator to create custom backgrounds. 