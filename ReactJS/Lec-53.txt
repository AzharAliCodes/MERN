 🌟 Lec 53 - React Setup & Tools

---

 1. Installation of React (Using Vite)

Vite is a fast build tool that simplifies React setup.

 ✅ Steps to install React using Vite:

bash
npm create vite@latest my-app


⬇️ Then it asks:

 Project name? → my-app
 Framework? → React
 Variant? → JavaScript or TypeScript

Then:

bash
cd my-app
npm install
npm run dev


---

 2. What is node_modules?

node_modules is a folder created when you run npm install.

 📌 Key Points:

 It stores all the dependencies (React, Vite, etc.) used in your project.
 It also stores nested dependencies (dependencies of dependencies).
 This folder is auto-generated — you don’t need to manually create or edit it.
 It's ignored in version control (.gitignore) because it can be reinstalled anytime via package.json.

---

 3. Vite – Explained in Detail

Vite is a modern frontend build tool that is faster and more efficient than older tools like Webpack or CRA (Create React App).

 ⚡ Why Vite?

 Super fast local development using native ES Modules.
 Lightning-fast hot module replacement (HMR).
 Smaller and optimized build output.
 Minimal setup compared to CRA.

 🔧 How Vite works:

 Uses ESBuild (written in Go) for speed.
 On development: Serves files directly via browser (no bundling).
 On production: Uses Rollup to bundle optimized code.

 📦 Features:

 Lightning-fast startup
 Built-in support for JSX, TS, CSS, etc.
 Simple configuration
 Support for plugins

---

 4. React File Structure (with Vite)

After creating a Vite-React app, the file structure looks like this:


my-app/
├── node_modules/
├── public/
│   └── vite.svg         → Static files (images, etc.)
├── src/
│   ├── App.jsx          → Main App component
│   ├── main.jsx         → Entry point, renders <App />
│   └── index.css        → Global CSS
├── .gitignore
├── index.html           → Main HTML file
├── package.json         → Project info + dependencies
├── vite.config.js       → Vite config file


 📌 Important Files:

 main.jsx
  Entry point → ReactDOM renders <App /> into divroot.

 App.jsx
  Main component that holds your app UI.

 index.html
  Contains <div id="root"> → where the app is rendered.

 vite.config.js
  Optional config for customizing Vite behavior.

---

 5. Installation Without Vite (Using CRA)

You can also use Create React App (CRA) instead of Vite.

 ✅ Steps:

bash
npx create-react-app my-app
cd my-app
npm start


 📁 File Structure (CRA):


my-app/
├── node_modules/
├── public/
│   └── index.html       → Root div for rendering app
├── src/
│   ├── App.js           → Main app component
│   ├── index.js         → Renders the app
│   └── ...
├── package.json


---

 6. Difference: Vite vs CRA

| Feature               | Vite               | CRA (Create React App)    |
| --------------------- | ------------------ | ------------------------- |
| Speed             | Very fast          | Slower                    |
| Build Tool        | ESBuild + Rollup   | Webpack                   |
| HMR               | Instant updates    | Slower refresh            |
| Configuration     | Simple & minimal   | Heavy & opinionated       |
| Bundle Size       | Smaller, optimized | Larger                    |
| File Structure    | Cleaner            | Slightly more boilerplate |
| Startup Time      | \~1 sec            | \~10+ sec                 |
| Community Support | Growing            | Mature                    |

---

 7. Why We Use Vite

 ✅ Advantages:

 Blazing fast startup and build times.
 Modern architecture using ES Modules.
 Simple config for new learners.
 Great developer experience with instant hot reload.
 Smaller and faster final bundle.

 🔥 In short:

> Vite = CRA 2.0 — but faster and lighter!

